name: Publish Python 🐍 distributions 📦 to PyPI and TestPyPI

on:
  push:
    branches:
      - master
      - "release/**"
  pull_request:
  workflow_dispatch:

jobs:
  tests:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [windows-latest]
        python-version: ['3.7', '3.10', '3.11-dev']
        include:
          - os: ubuntu-latest
            python-version: '3.10'
            
    name: Run unittests on Python ${{ matrix.python-version }} on ${{ matrix.os }}
    steps:
    - uses: actions/checkout@v3
    - name: Install poetry
      run: pipx install poetry
    - uses: actions/setup-python@v3
      with:
        python-version: ${{ matrix.python-version }}
        cache: 'poetry'

    - name: Install dev dependencies
      run: poetry install

    - name: Run the tests for regular and proactor loops
      run: poetry run pytest && poetry run pytest --proactor
    
  build-n-publish:
    name: Build and publish Python 🐍 distributions 📦 to PyPI and TestPyPI
    runs-on: ubuntu-18.04
    if: github.ref == 'refs/heads/master'
    needs: tests

    steps:
    - uses: actions/checkout@v3
    - name: Install poetry
      run: pipx install poetry
    - name: Set up Python 3.9
      uses: actions/setup-python@v3
      with:
        python-version: 3.9
        cache: 'poetry'

    - name: Build a binary wheel and a source tarball
      run: poetry build

    - name: Publish distribution 📦 to Test PyPI
      uses: pypa/gh-action-pypi-publish@master
      with:
        password: ${{ secrets.TEST_PYPI_API_TOKEN }}
        repository_url: https://test.pypi.org/legacy/
        skip_existing: true
    - name: Publish distribution 📦 to PyPI
      if: startsWith(github.ref, 'refs/tags')
      uses: pypa/gh-action-pypi-publish@master
      with:
        password: ${{ secrets.PYPI_API_TOKEN }}
