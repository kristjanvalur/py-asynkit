name: CI

on:
  push:
    branches:
      - master
      - "release/**"
      - "dev/**"
    tags: [v*]
  pull_request:
  workflow_dispatch:

jobs:
  lint:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: ["ubuntu-latest"]
        python-version: ["3.10", "3.12"]
        include:
          - os: windows-latest
            python-version: '3.10'
    name: Run linting on Python ${{ matrix.python-version }} on ${{ matrix.os }}
    steps:
      - uses: actions/checkout@v3
      - name: Install uv
        uses: astral-sh/setup-uv@v4
        with:
          enable-cache: true
      - name: Set up Python ${{ matrix.python-version }}
        run: uv python install ${{ matrix.python-version }}
      - name: Install dependencies
        run: uv sync --all-extras
      - name: Coverage
        run: uv run poe cov
      - name: Run Lint
        run: uv run poe lint
      - name: Run Format Check
        run: uv run poe style
      - name: Run Docs Format Check
        run: uv run poe style-docs
      - name: Run typechecks
        run: uv run poe typing

  tests:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: ["ubuntu-latest"]
        python-version: ["3.10", "3.11", "3.12", "pypy3.10"]
        include:
          - os: windows-latest
            python-version: '3.10'

    name: Run unittests on Python ${{ matrix.python-version }} on ${{ matrix.os }}
    steps:
    - uses: actions/checkout@v3
    - name: Install uv
      uses: astral-sh/setup-uv@v4
      with:
        enable-cache: true
    - name: Set up Python ${{ matrix.python-version }}
      run: uv python install ${{ matrix.python-version }}
    - name: Install dev dependencies
      run: uv sync --all-extras

    - name: Run the tests for selector loop
      run: uv run pytest
    
    - name: Run the tests for proactor loop
      if: ${{ matrix.os == 'windows-latest' }}
      run: uv run pytest --proactor
    
  testall:
    if: ${{ always() }}
    runs-on: ubuntu-latest
    name: Tests (matrix)
    needs: tests
    steps:
      - name: Check test matrix status
        if: ${{ needs.tests.result != 'success' }}
        run: exit 1

  build-n-publish:
    name: Build and publish Python distributions to PyPI and TestPyPI
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/master' || startsWith(github.ref, 'refs/tags') 
    needs:
      - tests
      - lint
    steps:
    - uses: actions/checkout@v3
    - name: Set up Python 3.9
      uses: actions/setup-python@v4
      with:
        python-version: 3.9
    - name: Install uv
      uses: astral-sh/setup-uv@v4

    - name: Build a binary wheel and a source tarball
      run: uv build

    - name: Publish distribution to Test PyPI
      uses: pypa/gh-action-pypi-publish@release/v1
      with:
        password: ${{ secrets.TEST_PYPI_API_TOKEN }}
        repository-url: https://test.pypi.org/legacy/
        skip-existing: true
    - name: Publish distribution to PyPI
      if: startsWith(github.ref, 'refs/tags')
      uses: pypa/gh-action-pypi-publish@release/v1
      with:
        password: ${{ secrets.PYPI_API_TOKEN }}
